Files attached with the reprt:

   1. projectSymbolic.strcturedslugs: Transitions are encoded as symbolic variables

   2. projectState.strcturedslugs: Explicit transitions from each state are encoded. It can be generated by using:
          python TransitionSystemGenerator.py 

   3. simulation.json: Strategy extracted for the attached projectSymbolic.structuredslugs

   4. demo.mp4: Video of the sample run with two dynamic obstacles.

   5. simulation.py, simulation.config, environment.py: To run the simulation using extracted protocol. 
                 Courtesy: Mohammed Alshiekh

   6. TransitionSystemGenerator.py: This file can be used to autogenerate the transitions encoded in 
        projectState.structuredslugs. Minor changes are required to get the exact projectState.structuredslugs


Commands used to extract the startegy and rerun the demo:

   1. Translate the structuredslugs file to slugsin format:
         path/to/slugs/tools/StrcturedSlugsParser/compiler.py projectSymbolic.strcturedslugs
                                                            > projectSymbolic.slugsin

   2. slugsin file can be used to extracct the explicit strategy:
         slugs projectSymbolic.slugsin --explicitStrategy --jsonOutput simulation.json

   3. To run the demo: 
        python simulation.py





